name: LearnerAI CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd frontend && npm install
        cd ../backend && npm install
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test -- --coverage --watchAll=false
    
    - name: Run backend tests
      run: |
        cd backend
        npm run test -- --coverage --watchAll=false
    
    - name: Run linting
      run: |
        cd frontend && npm run lint
        cd ../backend && npm run lint || true

  build-frontend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd frontend && npm install
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend

  build-backend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend && npm install
    
    - name: Build backend
      run: |
        cd backend
        npm run build
    
    - name: Deploy to Railway
      uses: railway-app/railway-deploy@v1
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
        service: learner-ai-backend

  deploy-ai-models:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install AI dependencies
      run: |
        cd AI
        pip install -r requirements.txt
    
    - name: Run AI model tests
      run: |
        cd AI
        python -m pytest tests/ -v
    
    - name: Deploy AI models (with manual approval)
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "AI model deployment requires manual approval"
        echo "Please run this workflow manually with the deployment key"
    
    - name: Notify deployment
      if: always()
      run: |
        echo "LearnerAI deployment completed"
        echo "Frontend: Deployed to Vercel"
        echo "Backend: Deployed to Railway"
        echo "AI Models: Ready for manual deployment"
